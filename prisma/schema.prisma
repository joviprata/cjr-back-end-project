
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  name       String
  email      String     @unique
  password      String
  departament String
  course      String
  photoProfile Bytes?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  Reviews Review[]
  Comments Comments[]

  @@map("users")
}

model Teacher {
  id           Int        @id @default(autoincrement())
  name         String
  departament String
  disciplineID Int
  photo        Bytes?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  Discipline   Discipline @relation(fields: [disciplineID], references: [id])
  reviews Review @relation(fields: [reviewID], references: [id])
  reviewID Int @unique

  @@map("teachers")
}

model Discipline {
  id           Int          @id @default(autoincrement())
  name         String
  teacherID String
  review Review @relation(fields: [reviewID], references: [id])
  reviewID Int @unique
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  Teacher  Teacher[]
  

  @@map("disciplines")
}

model Review {
  id           Int        @id @default(autoincrement())
  userID    Int
  teacherID  Int
  disciplineID Int
  content     String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  Usuer      User    @relation(fields: [userID], references: [id])
  teacher    Teacher?
  discipline Discipline?
  Comments  Comments[]

  @@map("reviews")
}

model Comments {
  id          Int        @id @default(autoincrement())
  userID   Int
  reviewID Int
  content    String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  User     User    @relation(fields: [userID], references: [id])
  Review   Review  @relation(fields: [reviewID], references: [id])

  @@map("comments")
}